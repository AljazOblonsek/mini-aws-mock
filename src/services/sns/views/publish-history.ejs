<!doctype html>
<html lang="en">
  <head>
    <%- include(assetsPath + '/core/views/partials/head'); %>

    <title>SNS - Publish History</title>
  </head>
  <body>
    <%- include(assetsPath + '/core/views/partials/sidebar'); %>
    <div class="main-content">
      <div style="display: flex; justify-content: space-between; align-items: center">
        <h1>Publish History</h1>
        <button class="ui secondary button" style="height: 100%" onclick="openPurgeHistoryModal()">Purge History</button>
      </div>

      <div class="ui form" style="margin-top: 1rem;">
        <div class="field">
          <input type="text" name="name" id="search-input" placeholder="Search">
        </div>
      </div>

      <div class="responsive-table-wrapper" style="margin-top: 1rem;">
        <table class="ui compact celled table" style="min-height: 10rem;">
          <thead>
            <tr>
              <th>Topic Arn</th>
              <th>Message</th>
              <th>Message Attributes</th>
              <th>Message Id</th>
              <th>Created At</th>
            </tr>
          </thead>
          <tbody id="publish-history-table-body">
            <% if(publishHistoryRecords.length === 0) { %>
              <tr>
                <td class="center aligned" colspan="5">No publishes yet.</td>
              </tr>
            <% } else { %>
              <% publishHistoryRecords.forEach(function(publishHistory) { %>
                <tr id="publish-history-<%= publishHistory.messageId %>">
                  <td data-label="Topic Arn"><%= publishHistory.topicArn %></td>
                  <td data-label="Message"><%= publishHistory.message %></td>
                  <td data-label="Message Attributes"><%= JSON.stringify(publishHistory.messageAttributes) %></td>
                  <td data-label="Message Id"><%= publishHistory.messageId %></td>
                  <td data-label="Created At"><%= new Date(publishHistory.createdAt).toLocaleString() %></td>
                </tr>
              <% }) %>
            <% } %>
          </tbody>
        </table>
      </div>
    </div>

    <div id="purge-history-modal" class="ui modal">
      <div class="header">
        Purge History
      </div>
      <div class="content">
        <p>Are you sure you want to purge publish history? This will delete <b>all</b> of the publish history from all topics.</p>
        <div class="ui form">
          <div class="field error">
            <label id="purge-history-modal-error"></label>
          </div>
        </div>
      </div>
      <div class="actions">
        <button class="ui button red negative">No</button>
        <button class="ui button green" onclick="onConfirmPurgeHistoryClick()">Yes</button>
      </div>
    </div>
  </body>

  <script>
    let originalPublishHistoryRecords = <%- JSON.stringify(publishHistoryRecords) %>
    
    // Purge history
    const openPurgeHistoryModal = () => {
      $('#purge-history-modal').modal('show');
    }

    const onConfirmPurgeHistoryClick = async () => {
      const errorElement = document.getElementById('purge-history-modal-error');

      errorElement.innerText = '';

      try {
        const fetchResponse = await fetch('/api/sns-topic-publish-history', { method: 'DELETE' });

        if (!fetchResponse.ok) {
          const response = await fetchResponse.json();
          errorElement.innerText = response.error;
          return;
        }

        const tableBodyElement = document.getElementById('publish-history-table-body');

        tableBodyElement.innerHTML = `
            <tr>
              <td class="center aligned" colspan="5">No publishes yet.</td>
            </tr>
          `;
        
        originalPublishHistoryRecords = [];

        $('#purge-history-modal').modal('hide');
      } catch (error) {
        errorElement.innerText = 'An unknown error occurred.'
      }
    }

    // Search
    const rerenderTable = (publishHistoryRecords) => {
      const table = document.getElementById('publish-history-table-body');

      if (publishHistoryRecords.length <= 0) {
        table.innerHTML = `
          <tr>
            <td class="center aligned" colspan="5">No publishes found.</td>
          </tr>
        `;
        return;
      }

      table.innerHTML = publishHistoryRecords.map(e => `
        <tr id="publish-history-${e.messageId}">
          <td data-label="Topic Arn">${e.topicArn}</td>
          <td data-label="Message">${e.message}</td>
          <td data-label="Message Attributes">${e.messageAttributes ? JSON.stringify(e.messageAttributes) : ''}</td>
          <td data-label="Message Id">${e.messageId}</td>
          <td data-label="Created At">${new Date(e.createdAt).toLocaleString()}</td>
        </tr>
      `).join('')
    }

    document.getElementById('search-input').addEventListener('keyup', (e) => {
      if (!e.target.value) {
        changeSearchInUrl('');
        rerenderTable(originalPublishHistoryRecords);
        return;
      }

      changeSearchInUrl(e.target.value.toLowerCase());
      const filteredRecords = originalPublishHistoryRecords.filter(publishHistory =>
        publishHistory.topicArn.toLowerCase().includes(e.target.value.toLowerCase()) ||
        publishHistory.message.toLowerCase().includes(e.target.value.toLowerCase()) ||
        publishHistory.messageId.toLowerCase().includes(e.target.value.toLowerCase())
      );
      rerenderTable(filteredRecords);
    })

    const initialSearch = getSearchFromUrl();

    if (initialSearch) {
      document.getElementById('search-input').value = initialSearch;
      const filteredRecords = originalPublishHistoryRecords.filter(publishHistory =>
        publishHistory.topicArn.toLowerCase().includes(initialSearch.toLowerCase()) ||
        publishHistory.message.toLowerCase().includes(initialSearch.toLowerCase()) ||
        publishHistory.messageId.toLowerCase().includes(initialSearch.toLowerCase())
      );
      rerenderTable(filteredRecords);
    }

    // Real time updates
    notificationsEventSource.addEventListener('message', (e) => {
      const notification = JSON.parse(e.data);

      if (notification.type === 'SNS.Publish') {
        originalPublishHistoryRecords.unshift(notification.payload);
        
        const search = document.getElementById('search-input').value;
        
        if (!search) {
          rerenderTable(originalPublishHistoryRecords);
          return;
        }
        
        const filteredRecords = originalPublishHistoryRecords.filter(publishHistory =>
          publishHistory.topicArn.toLowerCase().includes(search.toLowerCase()) ||
          publishHistory.message.toLowerCase().includes(search.toLowerCase()) ||
          publishHistory.messageId.toLowerCase().includes(search.toLowerCase())
        );
        rerenderTable(filteredRecords);
      }
    });
  </script>
</html>
