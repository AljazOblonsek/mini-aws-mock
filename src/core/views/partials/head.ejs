<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />

<script src="/public/jquery-3.7.1.min.js"></script>
<link rel="stylesheet" href="/public/fontawesome-6.5.1/css/all.min.css" />

<link rel="stylesheet" href="/public/semantic-ui-2.5.0/semantic.min.css" />
<script src="/public/semantic-ui-2.5.0/semantic.min.js"></script>

<style>
  .main-content {
    /* Width of the sidebar is 18rem */
    margin-left: 21rem;
    margin-right: 3rem;
    padding-top: 3.4rem;
  }

  .responsive-table-wrapper {
    height: 25rem;
    overflow-y: auto;
  }

  @media only screen and (min-height: 600px) {
    .responsive-table-wrapper {
      height: 30rem;
      overflow-y: auto;
    }
  }

  @media only screen and (min-height: 700px) {
    .responsive-table-wrapper {
      height: 37rem;
      overflow-y: auto;
    }
  }

  @media only screen and (min-height: 800px) {
    .responsive-table-wrapper {
      height: 42rem;
      overflow-y: auto;
    }
  }

  @media only screen and (min-height: 900px) {
    .responsive-table-wrapper {
      height: 52rem;
      overflow-y: auto;
    }
  }
</style>

<script>
  const changeSearchInUrl = (search) => {
    const url = new URL(window.location.href);

    if (search) {
      url.searchParams.set('search', search);
    } else {
      url.searchParams.delete('search');
    }

    history.replaceState(history.state, '', url);
  };

  const getSearchFromUrl = () => {
    const url = new URL(window.location.href);

    return url.searchParams.get('search') || '';
  };

  const notificationsEventSource = new EventSource('/sse/notifications');

  window.addEventListener('beforeunload', () => {
    notificationsEventSource.close();
  });
</script>
